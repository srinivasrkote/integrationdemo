================================================================================
TEST CLAIM SUBMISSION FOR JOHN DOE - MULTIPLE MEDICAL CODES SUPPORT
================================================================================
Date: October 3, 2025
Status: READY FOR TESTING ✓

FIXES APPLIED:
--------------
✅ Fixed 403 Forbidden error (@csrf_exempt added to submit_claim_to_payor)
✅ Updated Medical Codes Cheatsheet to support multiple code selection
✅ Updated ProviderDashboard to display codes as badges with remove buttons
✅ Updated mongo_models.py to support diagnosis_codes[] and procedure_codes[] arrays
✅ Updated provider_payor_views.py to handle both array and legacy formats
✅ Form validation now requires at least one diagnosis code

================================================================================
PATIENT INFORMATION - JOHN DOE
================================================================================

Name: John Doe
Member ID: MEM-BC-001 (payor's internal ID)
Insurance ID: BC-789-456 (use THIS for claim submission)
Date of Birth: June 15, 1985 (1985-06-15)
Gender: Male
Status: Active

Insurance Details:
------------------
Payor: BlueCross BlueShield (PAY001)
Current Policy: BC-789-456-123
Plan Name: BlueCross Gold Plan
Policy Status: Active
Coverage Period: 2024-01-01 to 2024-12-31

Known Medical Conditions:
------------------------
1. Type 2 Diabetes (ICD-10: E11.9)
   - Diagnosed: March 15, 2020
   - Severity: Moderate
   - Status: Active

2. Hypertension (ICD-10: I10)
   - Diagnosed: August 22, 2018
   - Severity: Mild
   - Status: Active

Deductible: $1,200 met | Out-of-Pocket: $2,500 met
Allergy: Penicillin (Rash - moderate severity)

================================================================================
NEW FEATURE: MULTIPLE MEDICAL CODES
================================================================================

What Changed:
-------------
✅ Can now add MULTIPLE diagnosis codes to a single claim
✅ Can now add MULTIPLE procedure codes to a single claim
✅ Codes display as colored badges with remove (×) buttons
✅ Diagnosis codes = Blue badges
✅ Procedure codes = Green badges
✅ Click Medical Codes Reference button multiple times to add codes
✅ Duplicate codes are automatically prevented

How It Works:
-------------
1. Click "Medical Codes Reference" button
2. Search and click a code (e.g., E11.9 for diabetes)
3. Modal stays open - you can add more codes
4. Search for another condition (e.g., I10 for hypertension)
5. Click to add second code
6. Switch to CPT tab to add procedure codes
7. Click multiple procedures as needed
8. Close modal when done
9. Review codes in form (shown as badges)
10. Click × on any badge to remove that code
11. Submit claim with all selected codes

================================================================================
TEST SCENARIO 1: SINGLE DIAGNOSIS + SINGLE PROCEDURE (Basic)
================================================================================

Step-by-Step:
-------------
1. Open http://localhost:8001 (login as Provider2)
2. Click "Submit New Claim"
3. Fill in:
   - Patient Name: John Doe
   - Insurance ID: BC-789-456
4. Click "Medical Codes Reference" button
5. Search "diabetes"
6. Click: E11.9 - Type 2 diabetes mellitus without complications
7. Switch to "CPT Codes" tab
8. Search "office visit"
9. Click: 99214 - Office/outpatient visit, established patient, moderate complexity
10. Close modal (click outside or press ESC if supported)
11. Verify badges appear:
    - Blue badge: E11.9 - Type 2 diabetes...
    - Green badge: 99214 - Office/outpatient visit...
12. Fill remaining fields:
    - Amount: 250.00
    - Date of Service: 2025-10-03
    - Notes: (optional) "Follow-up for diabetes management"
13. Click "Submit Claim"

Expected Result:
----------------
✅ Success message displays
✅ Claim saved to MongoDB with diagnosis_codes and procedure_codes arrays
✅ Claim visible in dashboard table
✅ No 403 Forbidden error

JSON Payload Sent:
------------------
{
  "patient": 3,
  "patient_name": "John Doe",
  "insurance_id": "BC-789-456",
  "diagnosis_codes": [
    {
      "code": "E11.9",
      "description": "Type 2 diabetes mellitus without complications"
    }
  ],
  "procedure_codes": [
    {
      "code": "99214",
      "description": "Office/outpatient visit, established patient, moderate complexity"
    }
  ],
  "amount_requested": 250.00,
  "date_of_service": "2025-10-03",
  "notes": "Follow-up for diabetes management",
  "priority": "medium"
}

================================================================================
TEST SCENARIO 2: MULTIPLE DIAGNOSES + MULTIPLE PROCEDURES (Advanced)
================================================================================

Step-by-Step:
-------------
1. Click "Submit New Claim"
2. Patient Name: John Doe
3. Insurance ID: BC-789-456
4. Click "Medical Codes Reference"
5. Add MULTIPLE diagnosis codes:
   - Search "diabetes" → Click E11.9
   - Search "hypertension" → Click I10
   - Search "hyperlipidemia" → Click E78.5
6. Switch to CPT tab, add MULTIPLE procedures:
   - Search "office" → Click 99215 (high complexity visit)
   - Search "A1C" → Click 83036 (if available, or use another lab code)
   - Search "EKG" → Click 93000 (if available)
7. Close modal
8. Verify 3 blue badges + 3 green badges
9. Amount: 450.00 (higher due to complexity)
10. Date: 2025-10-03
11. Notes: "Comprehensive visit for diabetes, hypertension, and lipid management"
12. Priority: High
13. Submit

Expected Result:
----------------
✅ All 6 codes appear as badges
✅ Claim submits successfully
✅ MongoDB record contains arrays with 3 diagnosis codes and 3 procedure codes

JSON Payload Sent:
------------------
{
  "patient": 3,
  "patient_name": "John Doe",
  "insurance_id": "BC-789-456",
  "diagnosis_codes": [
    {"code": "E11.9", "description": "Type 2 diabetes mellitus without complications"},
    {"code": "I10", "description": "Essential (primary) hypertension"},
    {"code": "E78.5", "description": "Hyperlipidemia, unspecified"}
  ],
  "procedure_codes": [
    {"code": "99215", "description": "Office/outpatient visit, established patient, high complexity"},
    {"code": "83036", "description": "Hemoglobin A1C level"},
    {"code": "93000", "description": "Electrocardiogram, routine ECG"}
  ],
  "amount_requested": 450.00,
  "date_of_service": "2025-10-03",
  "notes": "Comprehensive visit for diabetes, hypertension, and lipid management",
  "priority": "high"
}

================================================================================
TEST SCENARIO 3: ADD AND REMOVE CODES (Badge Interaction)
================================================================================

Step-by-Step:
-------------
1. Click "Submit New Claim"
2. Patient Name: John Doe
3. Insurance ID: BC-789-456
4. Click "Medical Codes Reference"
5. Add 3 diagnosis codes:
   - E11.9 (diabetes)
   - I10 (hypertension)
   - J06.9 (upper respiratory infection)
6. Notice you added 3 blue badges
7. Click the × button on J06.9 badge to remove it
8. Verify badge disappears
9. Click "Medical Codes Reference" again
10. Add J06.9 back
11. Verify it reappears
12. Switch to CPT tab
13. Add 2 procedure codes: 99214, 99213
14. Remove 99213 using × button
15. Add it back
16. Close modal
17. Fill amount: 400.00
18. Date: 2025-10-03
19. Submit

Expected Result:
----------------
✅ Codes can be added and removed dynamically
✅ × button removes codes from badges
✅ Same code can be re-added after removal
✅ Form submits with final code selection

================================================================================
TEST SCENARIO 4: VALIDATION - NO DIAGNOSIS CODES
================================================================================

Step-by-Step:
-------------
1. Click "Submit New Claim"
2. Fill ONLY:
   - Patient Name: John Doe
   - Insurance ID: BC-789-456
   - Amount: 200.00
3. Do NOT add any diagnosis codes
4. Click "Submit Claim"

Expected Result:
----------------
✅ Alert message: "Please fill in all required fields (Patient Name, Insurance ID, at least one Diagnosis Code and Amount)"
✅ Claim NOT submitted
✅ Form remains open for correction

================================================================================
TEST SCENARIO 5: BACKWARDS COMPATIBILITY TEST
================================================================================

Using API directly to test legacy format:

PowerShell Command:
-------------------
```powershell
$headers = @{
    "Content-Type" = "application/json"
    "Authorization" = "Basic " + [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes("provider2:password@123"))
}

$body = @{
    patient_name = "John Doe"
    insurance_id = "BC-789-456"
    diagnosis_code = "E11.9"
    diagnosis_description = "Type 2 diabetes mellitus without complications"
    procedure_code = "99214"
    procedure_description = "Office visit, moderate complexity"
    amount = 250.00
    date_of_service = "2025-10-03"
} | ConvertTo-Json

Invoke-RestMethod -Uri "http://localhost:8001/api/provider/submit-claim/" -Method POST -Headers $headers -Body $body
```

Expected Result:
----------------
✅ Backend converts legacy format to arrays automatically
✅ MongoDB stores as: diagnosis_codes=[{code, description}]
✅ Claim submits successfully

================================================================================
TROUBLESHOOTING
================================================================================

Issue: 403 Forbidden error
Status: FIXED ✓
Solution: @csrf_exempt decorator added to submit_claim_to_payor view

Issue: Codes not showing as badges
Check:
- Browser console (F12) for JavaScript errors
- Verify newClaim state has diagnosis_codes and procedure_codes as arrays
- Check React DevTools for component state

Issue: Modal doesn't open
Check:
- Verify dialog.jsx has fix for child rendering
- Check browser console for errors
- Try hard refresh (Ctrl+Shift+R)

Issue: Duplicate codes added
Status: Should NOT happen ✓
Solution: handleCodeSelect checks if code already exists before adding

Issue: Can't remove codes
Check:
- Verify removeCode function is defined
- Check onClick handler on × button
- Look for JavaScript errors in console

Issue: Claim submission fails with array format
Check:
- Backend logs for errors
- Verify mongo_models.py has diagnosis_codes ListField
- Check provider_payor_views.py handles arrays correctly

================================================================================
VERIFICATION CHECKLIST
================================================================================

Before Starting:
☐ Django server running on port 8001
☐ MongoDB connection successful
☐ Provider2 logged in
☐ No console errors in browser

During Code Selection:
☐ Medical Codes Reference button opens modal
☐ Can search for codes
☐ Clicking code adds badge to form
☐ Can add multiple codes without closing modal
☐ Blue badges for diagnosis codes
☐ Green badges for procedure codes
☐ × button visible on each badge
☐ Clicking × removes badge
☐ Duplicate codes prevented

During Submission:
☐ Validation blocks submission without diagnosis codes
☐ Claim submits successfully with codes
☐ Success message displays
☐ No 403 Forbidden error
☐ No JavaScript errors

After Submission:
☐ Claim appears in dashboard table
☐ MongoDB record has diagnosis_codes array
☐ MongoDB record has procedure_codes array
☐ Status shows as submitted/pending

Database Verification:
☐ Run: db.claims.findOne({patient_name: "John Doe"})
☐ Verify diagnosis_codes is an array
☐ Verify procedure_codes is an array
☐ Verify each code has {code, description} structure

================================================================================
QUICK COPY-PASTE TEST DATA
================================================================================

Patient Name: John Doe
Insurance ID: BC-789-456
Amount: 250.00
Date: 2025-10-03

Codes to Add (via Medical Codes Reference):
- E11.9 (Diabetes)
- I10 (Hypertension)
- 99214 (Office visit, moderate)

Expected Badges:
- Blue: E11.9 - Type 2 diabetes mellitus...
- Blue: I10 - Essential (primary) hypertension
- Green: 99214 - Office/outpatient visit...

================================================================================
API ENDPOINT DOCUMENTATION
================================================================================

Endpoint: POST /api/provider/submit-claim/
Authentication: Basic Auth (username:password in base64)
CSRF: Exempt (fixed)

Request Body (New Array Format):
{
  "patient_name": "John Doe",
  "insurance_id": "BC-789-456",
  "diagnosis_codes": [
    {"code": "E11.9", "description": "Type 2 diabetes..."},
    {"code": "I10", "description": "Essential hypertension"}
  ],
  "procedure_codes": [
    {"code": "99214", "description": "Office visit..."}
  ],
  "amount_requested": 250.00,
  "date_of_service": "2025-10-03",
  "notes": "Follow-up visit",
  "priority": "medium"
}

Request Body (Legacy Format - Still Supported):
{
  "patient_name": "John Doe",
  "insurance_id": "BC-789-456",
  "diagnosis_code": "E11.9",
  "diagnosis_description": "Type 2 diabetes...",
  "procedure_code": "99214",
  "procedure_description": "Office visit...",
  "amount": 250.00,
  "date_of_service": "2025-10-03"
}

Response (Success):
{
  "success": true,
  "message": "Claim submitted successfully to Payor system",
  "claim_id": "payor_claim_id",
  "status": "submitted",
  "auto_approved": false,
  "coverage_validated": true,
  "payment_details": {...}
}

Response (Error):
{
  "success": false,
  "error": "Error message",
  "validation_errors": [...]
}

================================================================================
MONGODB SCHEMA
================================================================================

Claim Collection Structure:
{
  "_id": ObjectId("..."),
  "claim_number": "CLM-2025-0001",
  "patient_name": "John Doe",
  "insurance_id": "BC-789-456",
  
  // NEW: Array fields
  "diagnosis_codes": [
    {"code": "E11.9", "description": "Type 2 diabetes mellitus without complications"},
    {"code": "I10", "description": "Essential (primary) hypertension"}
  ],
  "procedure_codes": [
    {"code": "99214", "description": "Office visit, moderate complexity"}
  ],
  
  // LEGACY: Single code fields (populated from first array element)
  "diagnosis_code": "E11.9",
  "diagnosis_description": "Type 2 diabetes mellitus without complications",
  "procedure_code": "99214",
  "procedure_description": "Office visit, moderate complexity",
  
  "amount_requested": 250.00,
  "amount_approved": 0.00,
  "status": "submitted",
  "date_of_service": ISODate("2025-10-03T00:00:00Z"),
  "date_submitted": ISODate("2025-10-03T03:15:00Z"),
  "notes": "Follow-up visit",
  "priority": "medium",
  "payor_claim_id": "PAY-CLM-12345"
}

================================================================================
SUCCESS CRITERIA
================================================================================

✅ Medical Codes Reference button opens modal
✅ Can add multiple diagnosis codes
✅ Can add multiple procedure codes
✅ Codes display as colored badges with remove buttons
✅ Validation requires at least one diagnosis code
✅ Claim submits without 403 Forbidden error
✅ MongoDB stores codes as arrays
✅ Legacy single code format still works
✅ Codes visible in dashboard after submission
✅ No JavaScript errors in browser console
✅ No Python errors in Django logs

================================================================================
NOTES
================================================================================

1. The system now supports BOTH array and legacy formats for backwards compatibility
2. UI always uses array format for new claims
3. Backend automatically converts legacy format to arrays
4. diagnosis_code/procedure_code fields populated from first array element
5. This ensures compatibility with any code expecting single codes
6. John Doe's actual conditions (E11.9, I10) match the test scenarios
7. Policy is active until Dec 31, 2024
8. Patient has met $1,200 of deductible

================================================================================
